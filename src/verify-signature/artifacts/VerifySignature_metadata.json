{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_messageHash",
						"type": "bytes32"
					}
				],
				"name": "getEthSignedMessageHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_message",
						"type": "string"
					}
				],
				"name": "getMessageHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_ethSignedMessageHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "_sig",
						"type": "bytes"
					}
				],
				"name": "recover",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_signer",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_message",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "_sig",
						"type": "bytes"
					}
				],
				"name": "verify",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getEthSignedMessageHash(bytes32)": {
					"notice": "以太坊标准格式要求的特定格式化拼接，  keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message)"
				},
				"getMessageHash(string)": {
					"notice": "建议使用 abi.encode 防止 hash collision"
				},
				"verify(address,string,bytes)": {
					"notice": "线下的message也需要先通过keccak256(abi.encodePacked(_message)); 进行hash，再进行签名"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/verify-signature/verifysignature.sol": "VerifySignature"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"src/verify-signature/verifysignature.sol": {
			"keccak256": "0x08124e1cbb09760d16a2352d6322a168282de9c242287c119afe89e7c5f1d5a4",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://06852085fa00ffb35248fb856bf07dcfc8758cb3ab585a8c8756a727723455b8",
				"dweb:/ipfs/QmccPyMvVvBmmbeoLrbSVJrDkVGk22m1NLXfwst9fd1LUW"
			]
		}
	},
	"version": 1
}